time = time_formatted, schemas = schemas, lang = lang, variables = variables)
bench::mark(  ggplot2::ggsave(graph_file, plot = graph, device = "png", width = width_in,
height = height_in, units = "in", dpi = 96))
library(ragg)
agg_png(file, width = 1000, height = 500, res = 144)
file <- knitr::fig_path('.png')
on_linux <- tolower(Sys.info()[['sysname']]) == 'linux'
fancy_font <- if (on_linux) 'URW Chancery L' else 'Papyrus'
agg_png(file, width = 1000, height = 500, res = 144)
ggplot(mtcars) +
geom_point(aes(mpg, disp, colour = hp)) +
labs(title = 'System fonts â€” Oh My! ðŸ˜±') +
theme(text = element_text(family = fancy_font))
library(ggplot2)
file <- knitr::fig_path('.png')
on_linux <- tolower(Sys.info()[['sysname']]) == 'linux'
fancy_font <- if (on_linux) 'URW Chancery L' else 'Papyrus'
agg_png(file, width = 1000, height = 500, res = 144)
ggplot(mtcars) +
geom_point(aes(mpg, disp, colour = hp)) +
labs(title = 'System fonts â€” Oh My! ðŸ˜±') +
theme(text = element_text(family = fancy_font))
invisible(dev.off())
gsub("\\\\", "/", file)
ragg::agg_png(file, width = 268, height = 150, res = 144)
explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
invisible(dev.off())
bench::mark({
ragg::agg_png(file, width = 268, height = 150, res = 144)
explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
invisible(dev.off())
})
ragg::agg_png(file, width = 268, height = 150, res = 144)
explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
invisible(dev.off())
explore_graph_start <- Sys.time()
graph_file <- tempfile(fileext = ".png")
ragg::agg_png(file, width = 268, height = 150, res = 144)
explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
invisible(dev.off())
explore_graph_end <- Sys.time()
explore_graph_end - explore_graph_start
# Timing explore_graph
explore_graph_start <- Sys.time()
graph_file <- tempfile(fileext = ".png")
ragg::agg_png(graph_file, width = 268, height = 150, res = 144)
explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
invisible(dev.off())
explore_graph_end <- Sys.time()
explore_graph_end - explore_graph_start
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
# Timing vars_build
vars_build_start <- Sys.time()
vars <- vars_build(var_left, var_right = " ", scale, time, variables = variables)
vars_build_end <- Sys.time()
time_formatted <- vars$time
vars <- vars$vars
# Timing data_get
data_get_start <- Sys.time()
data <- data_get(vars, scale, region, variables = variables)
data_get_end <- Sys.time()
# Timing legend_render
legend_render_start <- Sys.time()
legend <- legend_render(vars = vars, scale = scale, data = data, variables = variables)
legend_render_end <- Sys.time()
# Timing explore_graph
explore_graph_start <- Sys.time()
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
explore_graph_end <- Sys.time()
# Timing explore_text
explore_text_start <- Sys.time()
text <- explore_text(vars = vars, select_id = select_id, scale = scale, region = region,
data = data, time = time_formatted, schemas = schemas, lang = lang,
top_scale = top_scale, variables = variables)
explore_text_end <- Sys.time()
# Timing legend file save
legend_save_start <- Sys.time()
legend_file <- tempfile(fileext = ".png")
width_in <- 268 / 96
height_in <- 60 / 96
ggplot2::ggsave(legend_file, plot = legend, device = "png", width = width_in,
height = height_in, units = "in", dpi = 96)
legend_save_end <- Sys.time()
# Timing graph file save
graph_save_start <- Sys.time()
graph_file <- tempfile(fileext = ".png")
width_in <- 268 / 96
height_in <- 150 / 96
ggplot2::ggsave(graph_file, plot = graph, device = "png", width = width_in,
height = height_in, units = "in", dpi = 96)
graph_save_end <- Sys.time()
end_time <- Sys.time()
timing <- list(
db_get_variables = db_get_end - db_get_start,
vars_build = vars_build_end - vars_build_start,
data_get = data_get_end - data_get_start,
legend_render = legend_render_end - legend_render_start,
explore_graph = explore_graph_end - explore_graph_start,
explore_text = explore_text_end - explore_text_start,
legend_save = legend_save_end - legend_save_start,
graph_save = graph_save_end - graph_save_start,
total = end_time - start_time
)
timing <- lapply(timing, as.numeric)
timing
check()
install()
load_all()
var_left <- "alp"
var_right = " "
scale <- "DA"
region <- "CMA"
time <- 2021
select_id <- NA
schema <- "mtl"
lang <- NULL
schemas = list(var_left = list(time = time), var_right = list(time = time))
db_pool <- db_connection()
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
load_all()
var_left <- "alp"
var_right = " "
scale <- "DA"
region <- "CMA"
time <- 2021
select_id <- NA
schema <- "mtl"
lang <- NULL
schemas = list(var_left = list(time = time), var_right = list(time = time))
db_pool <- db_connection()
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
# Timing vars_build
vars_build_start <- Sys.time()
vars <- vars_build(var_left, var_right = " ", scale, time, variables = variables)
vars_build_end <- Sys.time()
time_formatted <- vars$time
vars <- vars$vars
# Timing data_get
data_get_start <- Sys.time()
data <- data_get(vars, scale, region, variables = variables)
data_get_end <- Sys.time()
# Timing legend_render
legend_render_start <- Sys.time()
legend <- legend_render(vars = vars, scale = scale, data = data, variables = variables)
legend_render_end <- Sys.time()
# Timing explore_graph
explore_graph_start <- Sys.time()
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
check()
install()
load_all()
start_time <- Sys.time()
var_vec <- var_left
var_left <- "alp"
var_right = " "
scale <- "DA"
region <- "CMA"
time <- 2021
select_id <- NA
schema <- "mtl"
lang <- NULL
schemas = list(var_left = list(time = time), var_right = list(time = time))
db_pool <- db_connection()
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
# Timing vars_build
vars_build_start <- Sys.time()
vars <- vars_build(var_left, var_right = " ", scale, time, variables = variables)
vars_build_end <- Sys.time()
time_formatted <- vars$time
vars <- vars$vars
# Timing data_get
data_get_start <- Sys.time()
data <- data_get(vars, scale, region, variables = variables)
data_get_end <- Sys.time()
# Timing legend_render
legend_render_start <- Sys.time()
legend <- legend_render(vars = vars, scale = scale, data = data, variables = variables)
legend_render_end <- Sys.time()
# Timing explore_graph
explore_graph_start <- Sys.time()
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
class(vars)
# Appease R CMD check
var_left <- x <- ..count.. <- NULL
# Grab the shared info between the graphs
shared_info <- explore_graph_info(
vars = vars, font_family = font_family,
scales_as_DA = scales_as_DA, select_id = select_id,
data = data, lang = lang, scale = scale, variables = variables
)
font_family = "acidgrotesk-book"
# Appease R CMD check
var_left <- x <- ..count.. <- NULL
# Grab the shared info between the graphs
shared_info <- explore_graph_info(
vars = vars, font_family = font_family,
scales_as_DA = scales_as_DA, select_id = select_id,
data = data, lang = lang, scale = scale, variables = variables
)
# Color as function
clr_df <- shared_info$colours_dfs$left_5
clr <- \(x) clr_df$fill[2:6]
rcol <- sprintf("var_left_%s", time$var_left)
# Keep the data inside the breaks
vl_breaks <- attr(data, "breaks_var_left")
# Get the scales ggplot function
x_scale <- explore_graph_scale(
var = vars$var_left,
x_y = "x",
data_vals = data[[rcol]],
scale = shared_info$treated_scale,
lang = lang
)
# Graph an appropriate number of bins
var_left_num <- length(unique(data[[rcol]]))
time$var_left
time
time_formatted
time = time_formatted
var_left <- x <- ..count.. <- NULL
# Grab the shared info between the graphs
shared_info <- explore_graph_info(
vars = vars, font_family = font_family,
scales_as_DA = scales_as_DA, select_id = select_id,
data = data, lang = lang, scale = scale, variables = variables
)
# Color as function
clr_df <- shared_info$colours_dfs$left_5
clr <- \(x) clr_df$fill[2:6]
rcol <- sprintf("var_left_%s", time$var_left)
# Keep the data inside the breaks
vl_breaks <- attr(data, "breaks_var_left")
# Get the scales ggplot function
x_scale <- explore_graph_scale(
var = vars$var_left,
x_y = "x",
data_vals = data[[rcol]],
scale = shared_info$treated_scale,
lang = lang
)
# Graph an appropriate number of bins
var_left_num <- length(unique(data[[rcol]]))
bin_number <- min(15, ceiling(0.8 * var_left_num))
# Get the breaks
vals <- attr(data, "breaks_var_left")
vals[1] <- -Inf
vals[length(vals)] <- Inf
# Draw the plot
plot <-
data[!is.na(data[[rcol]]), rcol] |>
# remove_outliers_df(cols = c("var_left")) |>
ggplot2::ggplot(ggplot2::aes(!!ggplot2::sym(rcol))) +
ggplot2::geom_histogram(ggplot2::aes(y = ggplot2::after_stat(..count.. / sum(..count..)),
fill = ggplot2::after_stat(x)),
bins = bin_number
) +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::binned_scale(
aesthetics = "fill",
palette = clr,
breaks = vals
) +
x_scale +
shared_info$labs +
shared_info$theme_default
data[!is.na(data[[rcol]]), rcol]
data[!is.na(data[[rcol]]), rcol] |>
# remove_outliers_df(cols = c("var_left")) |>
ggplot2::ggplot(ggplot2::aes(!!ggplot2::sym(rcol)))
rcol
data[!is.na(data[[rcol]]), rcol]
rcol
data
is.na(data[[rcol]])
data[!is.na(data[[rcol]]), rcol]
data[!is.na(data[[rcol]]), ]
data[!is.na(data[[rcol]]), ][rcol]
# Draw the plot
plot <-
data[!is.na(data[[rcol]]), ][rcol] |>
# remove_outliers_df(cols = c("var_left")) |>
ggplot2::ggplot(ggplot2::aes(!!ggplot2::sym(rcol))) +
ggplot2::geom_histogram(ggplot2::aes(y = ggplot2::after_stat(..count.. / sum(..count..)),
fill = ggplot2::after_stat(x)),
bins = bin_number
) +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::binned_scale(
aesthetics = "fill",
palette = clr,
breaks = vals
) +
x_scale +
shared_info$labs +
shared_info$theme_default
plot
load_all()
var_left <- "alp"
var_right = " "
scale <- "DA"
region <- "CMA"
time <- 2021
select_id <- NA
schema <- "mtl"
lang <- NULL
schemas = list(var_left = list(time = time), var_right = list(time = time))
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
# Timing vars_build
vars_build_start <- Sys.time()
vars <- vars_build(var_left, var_right = " ", scale, time, variables = variables)
vars_build_end <- Sys.time()
time_formatted <- vars$time
vars <- vars$vars
# Timing data_get
data_get_start <- Sys.time()
data <- data_get(vars, scale, region, variables = variables)
data_get_end <- Sys.time()
# Timing legend_render
legend_render_start <- Sys.time()
legend <- legend_render(vars = vars, scale = scale, data = data, variables = variables)
legend_render_end <- Sys.time()
# Timing explore_graph
explore_graph_start <- Sys.time()
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
explore_graph_end <- Sys.time()
# Timing explore_text
explore_text_start <- Sys.time()
text <- explore_text(vars = vars, select_id = select_id, scale = scale, region = region,
data = data, time = time_formatted, schemas = schemas, lang = lang,
top_scale = top_scale, variables = variables)
var_vec
variables
tibble::as_tibble(variables)
db_get_helper("SELECT var_code FROM mtl.variables")
var_left <- "age_agg_25_29_pct"
var_right = " "
scale <- "DA"
region <- "CMA"
time <- 2021
select_id <- NA
schema <- "mtl"
lang <- NULL
schemas = list(var_left = list(time = time), var_right = list(time = time))
start_time <- Sys.time()
var_vec <- var_left
if (var_right != " ") var_vec <- c(var_left, var_right)
var_vec <- paste(sprintf("'%s'", var_vec), collapse = ", ")
# Timing db_get_helper
db_get_start <- Sys.time()
variables <- db_get_helper(sprintf("SELECT * FROM mtl.variables
WHERE var_code IN (%s)
UNION
SELECT * FROM mtl.variables
WHERE var_code IN (
SELECT parent_vec
FROM mtl.variables
WHERE var_code IN (%s)
)
", var_vec, var_vec))
db_get_end <- Sys.time()
# Timing vars_build
vars_build_start <- Sys.time()
vars <- vars_build(var_left, var_right = " ", scale, time, variables = variables)
vars_build_end <- Sys.time()
time_formatted <- vars$time
vars <- vars$vars
# Timing data_get
data_get_start <- Sys.time()
data <- data_get(vars, scale, region, variables = variables)
data_get_end <- Sys.time()
# Timing legend_render
legend_render_start <- Sys.time()
legend <- legend_render(vars = vars, scale = scale, data = data, variables = variables)
legend_render_end <- Sys.time()
# Timing explore_graph
explore_graph_start <- Sys.time()
graph <- explore_graph(vars = vars, select_id = select_id, scale = scale, data = data,
time = time_formatted, schemas = schemas, lang = lang, variables = variables)
explore_graph_end <- Sys.time()
# Timing explore_text
explore_text_start <- Sys.time()
text <- explore_text(vars = vars, select_id = select_id, scale = scale, region = region,
data = data, time = time_formatted, schemas = schemas, lang = lang,
top_scale = top_scale, variables = variables)
explore_text_end <- Sys.time()
# Timing legend file save
legend_save_start <- Sys.time()
legend_file <- tempfile(fileext = ".png")
width_in <- 268 / 96
height_in <- 60 / 96
ggplot2::ggsave(legend_file, plot = legend, device = "png", width = width_in,
height = height_in, units = "in", dpi = 96)
legend_save_end <- Sys.time()
# Timing graph file save
graph_save_start <- Sys.time()
graph_file <- tempfile(fileext = ".png")
width_in <- 268 / 96
height_in <- 150 / 96
ggplot2::ggsave(graph_file, plot = graph, device = "png", width = width_in,
height = height_in, units = "in", dpi = 96)
graph_save_end <- Sys.time()
end_time <- Sys.time()
timing <- list(
db_get_variables = db_get_end - db_get_start,
vars_build = vars_build_end - vars_build_start,
data_get = data_get_end - data_get_start,
legend_render = legend_render_end - legend_render_start,
explore_graph = explore_graph_end - explore_graph_start,
explore_text = explore_text_end - explore_text_start,
legend_save = legend_save_end - legend_save_start,
graph_save = graph_save_end - graph_save_start,
total = end_time - start_time
)
timing <- lapply(timing, as.numeric)
timing
check()
install()
cc.Rapi::run_api()
check()
install()
cc.Rapi::run_api()
